{"version":3,"sources":["components/molecules/PlayerInputField.tsx","components/atoms/Player.tsx","components/molecules/PlayerField.tsx","components/atoms/Center.tsx","components/actions/index.ts","context/GlobalContext.tsx","components/atoms/MovingArrow.tsx","components/pages/HomePage.tsx","constants/game.ts","components/molecules/ScoreBoard.tsx","components/molecules/MatchPointSwitch.tsx","components/molecules/ServeTurnRadio.tsx","components/atoms/Spacing.tsx","components/molecules/SettingBox.tsx","components/pages/ScoreBoardPage.tsx","helpers/htmlToImage.ts","App.tsx","index.tsx"],"names":["Option","Select","PlayerInputField","onSubmit","formRef","useRef","onFinish","members","console","log","current","resetFields","ref","style","display","Item","name","rules","required","message","size","placeholder","width","marginRight","value","prefix","UserOutlined","htmlType","icon","UserAddOutlined","StyledPlayerWrapper","styled","div","Player","StyledPlayerFieldWrapper","StyledPlayerContainer","StyledFieldTitle","h3","PlayerField","teamTitle","map","member","idx","key","Center","increaseGamePoint","payload","type","initialState","teamA","gameScore","gamePoint","isServeTurn","teamB","isMatchPoint","GlobalContext","createContext","state","dispatch","Provider","GlobalProvider","children","useReducer","action","team","player","length","moveRight","keyframes","StyledArrowWrapper","MovingArrow","onClick","RightOutlined","StyledInputFieldWrapper","HomePage","history","useHistory","useContext","boxShadow","ghost","onBack","title","subTitle","push","TENNIS_GAME_POINT","StyledScoreBoardWrapper","StyledScoreBoardContainer","StyledPlayerName","span","StyledServeIcon","StyledGameScore","StyledGamePoint","StyledBoardRow","StyledMatchPointText","p","ScoreBoard","onIncreaseScore","htmlRef","id","ThunderboltFilled","StyledSwitchWrapper","SwitchTitle","StyledSwitch","MatchPointSwitch","onChange","StyledRadioWrapper","RadioTitle","StyledRadio","ServeTurnRadio","useState","setValue","Group","e","target","Spacing","StyledSettingBoxWrapper","SettingBox","onMatchChange","onServeChange","onImagePrintClick","block","SearchOutlined","ScoreBoardPage","scoreBoardRef","useEffect","html","htmlToImage","toPng","then","dataUrl","download","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.152f5006.chunk.js","sourcesContent":["import React, { useRef } from 'react';\nimport { Input, Button, Select, Form } from 'antd';\nimport { UserOutlined, UserAddOutlined } from '@ant-design/icons';\nimport { FormInstance } from 'antd/lib/form';\nimport { Member } from '../../interface/team';\n\nconst { Option } = Select;\n\ntype PlayerInputField = {\n    onSubmit: (members: Member) => void;\n};\nfunction PlayerInputField({ onSubmit }: PlayerInputField) {\n    const formRef = useRef<FormInstance>(null);\n\n    const handleFinish = (members: any): void => {\n        console.log(members);\n        onSubmit(members);\n        if (formRef.current) {\n            formRef.current.resetFields();\n        }\n    };\n\n    return (\n        <Form onFinish={handleFinish} ref={formRef} style={{ display: 'flex' }}>\n            <Form.Item name=\"team\" rules={[{ required: true, message: '팀을 선택해 주세요.' }]}>\n                <Select size=\"large\" placeholder=\"팀명\" style={{ width: 200, marginRight: '7px' }}>\n                    <Option value=\"ds\">덕소</Option>\n                    <Option value=\"hd\">행당</Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                style={{ marginRight: '7px' }}\n                name=\"player\"\n                rules={[{ required: true, message: '이름을 입력해 주세요.' }]}\n            >\n                <Input size=\"large\" placeholder=\"선수명\" prefix={<UserOutlined />} />\n            </Form.Item>\n            <Form.Item>\n                <Button htmlType=\"submit\" size=\"large\" icon={<UserAddOutlined />}>\n                    입력\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default PlayerInputField;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledPlayerWrapper = styled.div`\n    display: flex;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    font-size: 24px;\n    font-weight: bold;\n    letter-spacing: 1px;\n    width: 100%;\n    height: 48%;\n    margin-bottom: 2%;\n    border-radius: 4px;\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    /* background: tomato; */\n    cursor: pointer;\n\n    &::after {\n        content: '';\n        transition: 0.3s;\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n    }\n    &:hover {\n        &::after {\n            background-color: rgba(0, 0, 0, 0.1);\n        }\n    }\n    /* background-color: tomato; */\n    /* color: #fff; */\n`;\ntype PlayerTypes = {\n    name: string;\n};\nfunction Player({ name }: PlayerTypes) {\n    return <StyledPlayerWrapper>{name}</StyledPlayerWrapper>;\n}\n\nexport default Player;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Player from '../atoms/Player';\n\nconst StyledPlayerFieldWrapper = styled.div`\n    position: relative;\n`;\n\nconst StyledPlayerContainer = styled.div`\n    width: 300px;\n    height: 200px;\n    padding: 0 12px 12px 12px;\n    box-sizing: border-box;\n`;\nconst StyledFieldTitle = styled.h3`\n    margin-left: 12px;\n`;\n\ntype PlayeFieldType = {\n    teamTitle: string;\n    members: string[];\n};\nfunction PlayerField({ teamTitle, members = [] }: PlayeFieldType) {\n    return (\n        <StyledPlayerFieldWrapper>\n            <StyledFieldTitle>{teamTitle}</StyledFieldTitle>\n            <StyledPlayerContainer>\n                {members.map((member, idx) => (\n                    <Player key={idx} name={member} />\n                ))}\n            </StyledPlayerContainer>\n        </StyledPlayerFieldWrapper>\n    );\n}\n\nexport default PlayerField;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Center = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`;\n\nexport default Center;\n","import { Team, Member } from '../../interface/team';\n\nexport const SET_MEMBER = 'SET_MEMBER' as const;\nexport const TOGGLE_MATCH_POINT = 'TOGGLE_MATCH_POINT' as const;\nexport const TOGGLE_SERVE_TURN = 'TOGGLE_SERVE_TURN' as const;\nexport const INCREASE_GAME_SCORE = 'INCREASE_GAME_SCORE' as const;\nexport const DECREASE_GAME_SCORE = 'DECREASE_GAME_SCORE' as const;\nexport const INCREASE_GAME_POINT = 'INCREASE_GAME_POINT' as const;\nexport const DECREASE_GAME_POINT = 'DECREASE_GAME_POINT' as const;\n\nexport const setMember = (payload: Member) => ({ type: SET_MEMBER, payload });\nexport const toggleMatchPoint = (payload: boolean) => ({ type: TOGGLE_MATCH_POINT, payload });\nexport const toggleServeTurn = (payload: Team) => ({ type: TOGGLE_SERVE_TURN, payload });\nexport const increaseGameScore = (payload: Team) => ({ type: INCREASE_GAME_SCORE, payload });\nexport const decreaseGameScore = (payload: Team) => ({ type: DECREASE_GAME_SCORE, payload });\nexport const increaseGamePoint = (payload: Team) => ({ type: INCREASE_GAME_POINT, payload });\nexport const decreaseGamePoint = (payload: Team) => ({ type: DECREASE_GAME_POINT, payload });\n\nexport type GlobalAction =\n    | ReturnType<typeof setMember>\n    | ReturnType<typeof toggleMatchPoint>\n    | ReturnType<typeof increaseGameScore>\n    | ReturnType<typeof decreaseGameScore>\n    | ReturnType<typeof increaseGamePoint>\n    | ReturnType<typeof decreaseGamePoint>\n    | ReturnType<typeof toggleServeTurn>;\n","import React, { createContext, useState, useReducer } from 'react';\nimport { Team } from '../interface/team';\nimport {\n    INCREASE_GAME_SCORE,\n    DECREASE_GAME_SCORE,\n    TOGGLE_MATCH_POINT,\n    SET_MEMBER,\n    GlobalAction,\n    TOGGLE_SERVE_TURN,\n    INCREASE_GAME_POINT,\n} from '../components/actions';\n\nconst initialState: InitialStateTypes = {\n    teamA: {\n        members: ['박종혁', '김진아'],\n        gameScore: 0,\n        gamePoint: 0,\n        isServeTurn: true,\n    },\n    teamB: {\n        members: ['김근태', '최미란'],\n        gameScore: 0,\n        gamePoint: 0,\n        isServeTurn: false,\n    },\n    isMatchPoint: false,\n};\n\ntype InitialStateTypes = {\n    teamA: TeamObjectTypes;\n    teamB: TeamObjectTypes;\n    isMatchPoint: boolean;\n};\nexport type TeamObjectTypes = {\n    members: string[];\n    gameScore: number;\n    gamePoint: number;\n    isServeTurn: boolean;\n};\n\nexport const GlobalContext = createContext<{\n    state: InitialStateTypes;\n    dispatch: React.Dispatch<any>;\n}>({ state: initialState, dispatch: () => null });\n\nconst { Provider } = GlobalContext;\n\ntype GlobalProviderType = {\n    children: React.ReactNode;\n};\n\nfunction GlobalProvider({ children }: GlobalProviderType) {\n    const [state, dispatch] = useReducer((state: InitialStateTypes, action: GlobalAction) => {\n        switch (action.type) {\n            case INCREASE_GAME_SCORE:\n                if (action.payload === 'ds') {\n                    return {\n                        ...state,\n                        teamA: {\n                            ...state.teamA,\n                            gameScore: state.teamA.gameScore + 1,\n                        },\n                    };\n                }\n\n                if (action.payload === 'hd') {\n                    return {\n                        ...state,\n                        teamB: {\n                            ...state.teamB,\n                            gameScore: state.teamB.gameScore + 1,\n                        },\n                    };\n                }\n                return state;\n            case INCREASE_GAME_POINT:\n                if (action.payload === 'ds') {\n                    return {\n                        ...state,\n                        teamA: {\n                            ...state.teamA,\n                            gameScore: 0,\n                            gamePoint: state.teamA.gamePoint + 1,\n                        },\n                        teamB: {\n                            ...state.teamB,\n                            gameScore: 0,\n                        },\n                    };\n                }\n\n                if (action.payload === 'hd') {\n                    return {\n                        ...state,\n                        teamA: {\n                            ...state.teamA,\n                            gameScore: 0,\n                        },\n                        teamB: {\n                            ...state.teamB,\n                            gameScore: 0,\n                            gamePoint: state.teamB.gamePoint + 1,\n                        },\n                    };\n                }\n                return state;\n            case DECREASE_GAME_SCORE:\n                return state;\n            case TOGGLE_MATCH_POINT:\n                return {\n                    ...state,\n                    isMatchPoint: action.payload,\n                };\n            case TOGGLE_SERVE_TURN:\n                if (action.payload === 'ds') {\n                    return {\n                        ...state,\n                        teamA: {\n                            ...state.teamA,\n                            isServeTurn: true,\n                        },\n                        teamB: {\n                            ...state.teamB,\n                            isServeTurn: false,\n                        },\n                    };\n                }\n                if (action.payload === 'hd') {\n                    return {\n                        ...state,\n                        teamA: {\n                            ...state.teamA,\n                            isServeTurn: false,\n                        },\n                        teamB: {\n                            ...state.teamB,\n                            isServeTurn: true,\n                        },\n                    };\n                }\n                return state;\n            case SET_MEMBER: {\n                const { team, player } = action.payload;\n                if (team === 'ds') {\n                    console.log('SET_MEMBER__DS');\n                    return {\n                        ...state,\n                        teamA: {\n                            ...state.teamA,\n                            members: [state.teamA.members[state.teamA.members.length - 1], player],\n                        },\n                    };\n                }\n\n                if (team === 'hd') {\n                    console.log('SET_MEMBER__HD');\n                    return {\n                        ...state,\n                        teamB: {\n                            ...state.teamB,\n                            members: [state.teamB.members[state.teamB.members.length - 1], player],\n                        },\n                    };\n                }\n                console.log('SET_MEMBER__ERROR');\n\n                return state;\n            }\n\n            default:\n                return state;\n        }\n    }, initialState);\n\n    return <Provider value={{ state, dispatch }}>{children}</Provider>;\n}\n\nexport default GlobalProvider;\n","import React from 'react';\nimport { RightOutlined } from '@ant-design/icons';\nimport styled, { keyframes } from 'styled-components';\n\nconst moveRight = keyframes`\n    0% {\n        right: 10px\n    }\n    50% {\n        right: -20px\n    }\n    100% {\n        right: 10px\n    }\n`;\n\nconst StyledArrowWrapper = styled.div`\n    position: absolute;\n    top: 50%;\n    right: 10px;\n    transform: translateY(-50%);\n    font-size: 9rem;\n    opacity: 0.7;\n    cursor: pointer;\n\n    animation: ${moveRight} 1s infinite linear alternate;\n`;\n\ntype MovingArrowTypes = {\n    onClick: () => void;\n};\nfunction MovingArrow({ onClick }: MovingArrowTypes) {\n    return (\n        <StyledArrowWrapper onClick={onClick}>\n            <RightOutlined />\n        </StyledArrowWrapper>\n    );\n}\n\nexport default MovingArrow;\n","import React, { useContext } from 'react';\nimport { PageHeader } from 'antd';\nimport { useHistory } from 'react-router-dom';\n\nimport PlayerInputField from '../molecules/PlayerInputField';\nimport styled from 'styled-components';\nimport PlayerField from '../molecules/PlayerField';\nimport Center from '../atoms/Center';\nimport { GlobalContext } from '../../context/GlobalContext';\nimport { setMember } from '../actions';\nimport { Member } from '../../interface/team';\nimport MovingArrow from '../atoms/MovingArrow';\n\nconst StyledPlayerFieldWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 24px;\n`;\n\nconst StyledInputFieldWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nfunction HomePage() {\n    const history = useHistory();\n    const { dispatch, state } = useContext(GlobalContext);\n    const { teamA, teamB } = state;\n\n    console.log(state);\n    const handleSubmit = (member: Member) => {\n        dispatch(setMember(member));\n    };\n\n    const handleArrowClick = () => {\n        history.push('/board');\n    };\n\n    return (\n        <>\n            <PageHeader\n                style={{ boxShadow: '0px 1px 3px rgba(0,0,0,0.2)' }}\n                ghost={false}\n                onBack={() => null}\n                title=\"Title\"\n                subTitle=\"This is a subtitle\"\n            />\n\n            <Center>\n                <StyledPlayerFieldWrapper>\n                    <PlayerField members={teamA.members} teamTitle=\"팀 덕소\" />\n                    대\n                    <PlayerField members={teamB.members} teamTitle=\"팀 행당\" />\n                </StyledPlayerFieldWrapper>\n                <StyledInputFieldWrapper>\n                    <PlayerInputField onSubmit={handleSubmit} />\n                </StyledInputFieldWrapper>\n            </Center>\n\n            <MovingArrow onClick={handleArrowClick} />\n        </>\n    );\n}\n\nexport default HomePage;\n","export const TENNIS_GAME_POINT = [0, 15, 30, 40];\n","import React, { Ref } from 'react';\nimport styled from 'styled-components';\nimport { ThunderboltFilled } from '@ant-design/icons';\nimport { TeamObjectTypes } from '../../context/GlobalContext';\nimport { Team } from '../../interface/team';\nimport { TENNIS_GAME_POINT } from '../../constants/game';\n\nconst StyledScoreBoardWrapper = styled.div`\n    width: 350px;\n`;\nconst StyledScoreBoardContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    background-color: #2d3436;\n    border: 5px solid #636e72;\n    border-right: 7px solid #636e72;\n    border-left: 7px solid #636e72;\n    user-select: none;\n`;\n\nconst StyledPlayerName = styled.span`\n    flex: 2;\n    color: #fff;\n    letter-spacing: 4px;\n    padding: 7px;\n`;\nconst StyledServeIcon = styled.div`\n    /* flex: 1; */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 30px;\n    color: #fdcb6e;\n    text-align: center;\n    font-size: 18px;\n`;\nconst StyledGameScore = styled.span`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 50px;\n    text-align: center;\n    background: #fff;\n    cursor: pointer;\n    transition: 0.3s;\n    &:hover {\n        color: #e67e22;\n    }\n`;\nconst StyledGamePoint = styled.span`\n    width: 50px;\n    color: #fff;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst StyledBoardRow = styled.div`\n    display: flex;\n    font-size: 24px;\n    &:first-child {\n        border-bottom: 3px solid #636e72;\n    }\n`;\n\nconst StyledMatchPointText = styled.p`\n    text-align: right;\n    font-size: 17px;\n    text-transform: uppercase;\n    font-style: italic;\n    margin-right: 7px;\n    letter-spacing: 1px;\n    height: 20px;\n    color: #c0392b;\n`;\ntype ScoreBoardTypes = {\n    isMatchPoint?: boolean;\n    onIncreaseScore: (team: Team) => void;\n    teamA: TeamObjectTypes;\n    teamB: TeamObjectTypes;\n    htmlRef: Ref<HTMLDivElement>;\n};\nfunction ScoreBoard({\n    onIncreaseScore,\n    isMatchPoint = false,\n    teamA,\n    teamB,\n    htmlRef,\n}: ScoreBoardTypes) {\n    return (\n        <StyledScoreBoardWrapper ref={htmlRef} id=\"score-board\">\n            <StyledScoreBoardContainer>\n                <StyledBoardRow>\n                    <StyledServeIcon>{teamA.isServeTurn && <ThunderboltFilled />}</StyledServeIcon>\n                    <StyledPlayerName>\n                        {teamA.members[0]} / {teamA.members[1]}\n                    </StyledPlayerName>\n                    <StyledGamePoint>{teamA.gamePoint}</StyledGamePoint>\n                    <StyledGameScore onClick={() => onIncreaseScore('ds')}>\n                        {TENNIS_GAME_POINT[teamA.gameScore]}\n                    </StyledGameScore>\n                </StyledBoardRow>\n                <StyledBoardRow>\n                    <StyledServeIcon>{teamB.isServeTurn && <ThunderboltFilled />}</StyledServeIcon>\n                    <StyledPlayerName>\n                        {teamB.members[0]} / {teamB.members[1]}\n                    </StyledPlayerName>\n                    <StyledGamePoint>{teamB.gamePoint}</StyledGamePoint>\n                    <StyledGameScore onClick={() => onIncreaseScore('hd')}>\n                        {TENNIS_GAME_POINT[teamB.gameScore]}\n                    </StyledGameScore>\n                </StyledBoardRow>\n            </StyledScoreBoardContainer>\n            <StyledMatchPointText>{isMatchPoint && 'Match Point'}</StyledMatchPointText>\n        </StyledScoreBoardWrapper>\n    );\n}\n\nexport default ScoreBoard;\n","import React from 'react';\nimport { Switch } from 'antd';\nimport styled from 'styled-components';\n\nconst StyledSwitchWrapper = styled.div`\n    display: flex;\n    /* justify-content: space-between; */\n    width: 240px;\n`;\nconst SwitchTitle = styled.span`\n    width: 100px;\n    margin-right: 7px;\n`;\n\nconst StyledSwitch = styled.div`\n    flex: 1;\n`;\n\ntype MatchPointSwitchTypes = {\n    onChange: (value: boolean) => void;\n};\nfunction MatchPointSwitch({ onChange }: MatchPointSwitchTypes) {\n    return (\n        <StyledSwitchWrapper>\n            <SwitchTitle>매치 포인트</SwitchTitle>\n            <StyledSwitch>\n                <Switch onChange={onChange} />\n            </StyledSwitch>\n        </StyledSwitchWrapper>\n    );\n}\n\nexport default MatchPointSwitch;\n","import React, { useState } from 'react';\nimport { Radio } from 'antd';\nimport styled from 'styled-components';\nimport { RadioChangeEvent } from 'antd/lib/radio';\nimport { Team } from '../../interface/team';\n\nconst StyledRadioWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 240px;\n`;\nconst RadioTitle = styled.span`\n    width: 100px;\n    margin-right: 7px;\n`;\n\nconst StyledRadio = styled.div`\n    flex: 1;\n`;\n\ntype MatchPointSwitchTypes = {\n    onChange: (value: Team) => void;\n};\nfunction ServeTurnRadio({ onChange }: MatchPointSwitchTypes) {\n    const [value, setValue] = useState('ds');\n\n    const hanleChange = (e: RadioChangeEvent) => {\n        const { value } = e.target;\n        setValue(value);\n        onChange(value);\n    };\n\n    return (\n        <StyledRadioWrapper>\n            <RadioTitle>서브권</RadioTitle>\n            <StyledRadio>\n                <Radio.Group onChange={hanleChange} value={value}>\n                    <Radio value=\"ds\">덕소</Radio>\n                    <Radio value=\"hd\">행당</Radio>\n                </Radio.Group>\n            </StyledRadio>\n        </StyledRadioWrapper>\n    );\n}\n\nexport default ServeTurnRadio;\n","import styled from 'styled-components';\n\nconst Spacing = styled.div`\n    height: 12px;\n`;\n\nexport default Spacing;\n","import React from 'react';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\n\nimport MatchPointSwitch from './MatchPointSwitch';\n\nimport ServeTurnRadio from './ServeTurnRadio';\nimport { Team } from '../../interface/team';\nimport styled from 'styled-components';\nimport Spacing from '../atoms/Spacing';\n\nconst StyledSettingBoxWrapper = styled.div``;\n\ntype SettingBoxTypes = {\n    onServeChange: (value: Team) => void;\n    onMatchChange: (value: boolean) => void;\n    onImagePrintClick: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n};\nfunction SettingBox({ onMatchChange, onServeChange, onImagePrintClick }: SettingBoxTypes) {\n    return (\n        <StyledSettingBoxWrapper>\n            <MatchPointSwitch onChange={onMatchChange} />\n            <Spacing />\n            <ServeTurnRadio onChange={onServeChange} />\n            <Spacing />\n            <Spacing />\n            <Button size=\"large\" block icon={<SearchOutlined />} onClick={onImagePrintClick}>\n                이미지로 출력하기\n            </Button>\n        </StyledSettingBoxWrapper>\n    );\n}\n\nexport default SettingBox;\n","import React, { useContext, useEffect, useRef } from 'react';\nimport { PageHeader, Button } from 'antd';\nimport ScoreBoard from '../molecules/ScoreBoard';\nimport Center from '../atoms/Center';\nimport { GlobalContext } from '../../context/GlobalContext';\nimport {\n    toggleMatchPoint,\n    toggleServeTurn,\n    increaseGameScore,\n    increaseGamePoint,\n} from '../actions';\nimport { Team } from '../../interface/team';\nimport SettingBox from '../molecules/SettingBox';\nimport { TENNIS_GAME_POINT } from '../../constants/game';\nimport { downloadImage } from '../../helpers/htmlToImage';\n\nfunction ScoreBoardPage() {\n    const scoreBoardRef = useRef<HTMLDivElement>(null);\n    const { state, dispatch } = useContext(GlobalContext);\n\n    console.log(state, `from scorebord page`);\n    const { teamA, teamB, isMatchPoint } = state;\n\n    const handleMatchChange = (value: boolean) => {\n        dispatch(toggleMatchPoint(value));\n    };\n\n    const handleServeChange = (team: Team) => {\n        dispatch(toggleServeTurn(team));\n    };\n    const handleIncreaseScore = (team: Team) => {\n        dispatch(increaseGameScore(team));\n    };\n\n    const handleImagePrint = () => {\n        // 왜 null..?\n        if (scoreBoardRef.current) {\n            downloadImage(scoreBoardRef.current);\n        }\n    };\n\n    useEffect(() => {\n        console.log(teamA.gameScore + 'vs' + teamB.gameScore);\n        if (teamA.gameScore === TENNIS_GAME_POINT.length) {\n            dispatch(increaseGamePoint('ds'));\n        }\n        if (teamB.gameScore === TENNIS_GAME_POINT.length) {\n            dispatch(increaseGamePoint('hd'));\n        }\n    }, [teamA.gameScore, teamB.gameScore, dispatch]);\n    return (\n        <>\n            <PageHeader\n                style={{ boxShadow: '0px 1px 3px rgba(0,0,0,0.2)' }}\n                ghost={false}\n                onBack={() => null}\n                title=\"Title\"\n                subTitle=\"This is a subtitle\"\n            />\n\n            <Center>\n                <ScoreBoard\n                    onIncreaseScore={handleIncreaseScore}\n                    isMatchPoint={isMatchPoint}\n                    teamA={teamA}\n                    teamB={teamB}\n                    htmlRef={scoreBoardRef}\n                />\n                <SettingBox\n                    onServeChange={handleServeChange}\n                    onMatchChange={handleMatchChange}\n                    onImagePrintClick={handleImagePrint}\n                />\n            </Center>\n        </>\n    );\n}\n\nexport default ScoreBoardPage;\n","import download from 'downloadjs';\nimport htmlToImage from 'html-to-image';\n\nexport const downloadImage = (html: HTMLElement) => {\n    htmlToImage.toPng(html).then(function (dataUrl) {\n        download(dataUrl, 'my-node.png');\n    });\n};\n\nexport const appendImage = (html: HTMLElement, target: HTMLElement) => {\n    htmlToImage\n        .toPng(html)\n        .then(function (dataUrl) {\n            var img = new Image();\n            img.src = dataUrl;\n            document.body.appendChild(img);\n        })\n        .catch(function (error) {\n            console.error('oops, something went wrong!', error);\n        });\n};\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Header from './components/atoms/Header';\nimport PlayerInputField from './components/molecules/PlayerInputField';\nimport HomePage from './components/pages/HomePage';\nimport ScoreBoardPage from './components/pages/ScoreBoardPage';\n\nfunction App() {\n    return (\n        <>\n            <Switch>\n                <Route path=\"/\" exact>\n                    <HomePage />\n                </Route>\n                <Route path=\"/board\">\n                    <ScoreBoardPage />\n                </Route>\n            </Switch>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport App from './App';\nimport GlobalProvider from './context/GlobalContext';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <GlobalProvider>\n                <App />\n            </GlobalProvider>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}