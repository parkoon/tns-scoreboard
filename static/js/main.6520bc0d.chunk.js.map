{"version":3,"sources":["context/GlobalContext.tsx","components/actions/index.ts","index.tsx"],"names":["initialState","teamA","members","gameScore","gamePoint","tieScore","isServeTurn","teamB","isTieBreak","isMatchPoint","isDuce","Provider","createContext","state","dispatch","GlobalProvider","children","useReducer","action","type","payload","team","player","length","value","ReactDOM","render","StrictMode","basename","style","fontSize","document","getElementById"],"mappings":"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","file":"static/js/main.6520bc0d.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport {\n    INCREASE_GAME_SCORE,\n    DECREASE_GAME_SCORE,\n    TOGGLE_MATCH_POINT,\n    SET_MEMBER,\n    GlobalAction,\n    TOGGLE_SERVE_TURN,\n    INCREASE_GAME_POINT,\n    TOGGLE_TIEBREAK,\n    INCREASE_TIE_SCORE,\n    TOGGLE_DUCE,\n} from '../components/actions';\n\nconst initialState: InitialStateTypes = {\n    teamA: {\n        members: ['박종혁', '김진아'],\n        gameScore: 0,\n        gamePoint: 0,\n        tieScore: 0,\n        isServeTurn: true,\n    },\n    teamB: {\n        members: ['김근태', '최미란'],\n        gameScore: 0,\n        gamePoint: 0,\n        tieScore: 0,\n        isServeTurn: false,\n    },\n    isTieBreak: false,\n    isMatchPoint: false,\n    isDuce: false,\n};\n\ntype InitialStateTypes = {\n    teamA: TeamObjectTypes;\n    teamB: TeamObjectTypes;\n    isMatchPoint: boolean;\n    isTieBreak: boolean;\n    isDuce: boolean;\n};\nexport type TeamObjectTypes = {\n    members: string[];\n    gameScore: number;\n    gamePoint: number;\n    tieScore: number;\n    isServeTurn: boolean;\n};\n\nexport const GlobalContext = createContext<{\n    state: InitialStateTypes;\n    dispatch: React.Dispatch<any>;\n}>({ state: initialState, dispatch: () => null });\n\nconst { Provider } = GlobalContext;\n\ntype GlobalProviderType = {\n    children: React.ReactNode;\n};\n\nfunction GlobalProvider({ children }: GlobalProviderType) {\n    const [state, dispatch] = useReducer((state: InitialStateTypes, action: GlobalAction) => {\n        switch (action.type) {\n            case INCREASE_GAME_SCORE:\n                if (action.payload === 'ds') {\n                    return {\n                        ...state,\n                        teamA: {\n                            ...state.teamA,\n                            gameScore: state.teamA.gameScore + 1,\n                        },\n                    };\n                }\n\n                if (action.payload === 'hd') {\n                    return {\n                        ...state,\n                        teamB: {\n                            ...state.teamB,\n                            gameScore: state.teamB.gameScore + 1,\n                        },\n                    };\n                }\n                return state;\n            case INCREASE_GAME_POINT:\n                if (action.payload === 'ds') {\n                    return {\n                        ...state,\n                        teamA: {\n                            ...state.teamA,\n                            gameScore: 0,\n                            gamePoint: state.teamA.gamePoint + 1,\n                        },\n                        teamB: {\n                            ...state.teamB,\n                            gameScore: 0,\n                        },\n                    };\n                }\n\n                if (action.payload === 'hd') {\n                    return {\n                        ...state,\n                        teamA: {\n                            ...state.teamA,\n                            gameScore: 0,\n                        },\n                        teamB: {\n                            ...state.teamB,\n                            gameScore: 0,\n                            gamePoint: state.teamB.gamePoint + 1,\n                        },\n                    };\n                }\n                return state;\n            case INCREASE_TIE_SCORE:\n                if (action.payload === 'ds') {\n                    return {\n                        ...state,\n                        teamA: {\n                            ...state.teamA,\n                            tieScore: state.teamA.tieScore + 1,\n                        },\n                    };\n                }\n\n                if (action.payload === 'hd') {\n                    return {\n                        ...state,\n                        teamB: {\n                            ...state.teamB,\n                            tieScore: state.teamB.tieScore + 1,\n                        },\n                    };\n                }\n                return state;\n            case DECREASE_GAME_SCORE:\n                return state;\n            case TOGGLE_MATCH_POINT:\n                return {\n                    ...state,\n                    isMatchPoint: action.payload,\n                };\n            case TOGGLE_TIEBREAK:\n                return {\n                    ...state,\n                    isTieBreak: action.payload,\n                };\n            case TOGGLE_DUCE:\n                return {\n                    ...state,\n                    isDuce: action.payload,\n                };\n            case TOGGLE_SERVE_TURN:\n                if (action.payload === 'ds') {\n                    return {\n                        ...state,\n                        teamA: {\n                            ...state.teamA,\n                            isServeTurn: true,\n                        },\n                        teamB: {\n                            ...state.teamB,\n                            isServeTurn: false,\n                        },\n                    };\n                }\n                if (action.payload === 'hd') {\n                    return {\n                        ...state,\n                        teamA: {\n                            ...state.teamA,\n                            isServeTurn: false,\n                        },\n                        teamB: {\n                            ...state.teamB,\n                            isServeTurn: true,\n                        },\n                    };\n                }\n                return state;\n            case SET_MEMBER: {\n                const { team, player } = action.payload;\n                if (team === 'ds') {\n                    return {\n                        ...state,\n                        teamA: {\n                            ...state.teamA,\n                            members: [state.teamA.members[state.teamA.members.length - 1], player],\n                        },\n                    };\n                }\n\n                if (team === 'hd') {\n                    return {\n                        ...state,\n                        teamB: {\n                            ...state.teamB,\n                            members: [state.teamB.members[state.teamB.members.length - 1], player],\n                        },\n                    };\n                }\n\n                return state;\n            }\n\n            default:\n                return state;\n        }\n    }, initialState);\n\n    return <Provider value={{ state, dispatch }}>{children}</Provider>;\n}\n\nexport default GlobalProvider;\n","import { Team, Member } from '../../interface/team';\n\nexport const SET_MEMBER = 'SET_MEMBER' as const;\nexport const TOGGLE_MATCH_POINT = 'TOGGLE_MATCH_POINT' as const;\nexport const TOGGLE_SERVE_TURN = 'TOGGLE_SERVE_TURN' as const;\nexport const INCREASE_GAME_SCORE = 'INCREASE_GAME_SCORE' as const;\nexport const DECREASE_GAME_SCORE = 'DECREASE_GAME_SCORE' as const;\nexport const INCREASE_TIE_SCORE = 'INCREASE_TIE_SCORE' as const;\nexport const DECREASE_TIE_SCORE = 'DECREASE_TIE_SCORE' as const;\nexport const INCREASE_GAME_POINT = 'INCREASE_GAME_POINT' as const;\nexport const DECREASE_GAME_POINT = 'DECREASE_GAME_POINT' as const;\nexport const TOGGLE_TIEBREAK = 'TOGGLE_TIEBREAK' as const;\nexport const TOGGLE_DUCE = 'TOGGLE_DUCE' as const;\n\nexport const setMember = (payload: Member) => ({ type: SET_MEMBER, payload });\nexport const toggleMatchPoint = (payload: boolean) => ({ type: TOGGLE_MATCH_POINT, payload });\nexport const toggleTiebreak = (payload: boolean) => ({ type: TOGGLE_TIEBREAK, payload });\nexport const toggleServeTurn = (payload: Team) => ({ type: TOGGLE_SERVE_TURN, payload });\nexport const toggleDuce = (payload: boolean) => ({ type: TOGGLE_DUCE, payload });\nexport const increaseGameScore = (payload: Team) => ({ type: INCREASE_GAME_SCORE, payload });\nexport const decreaseGameScore = (payload: Team) => ({ type: DECREASE_GAME_SCORE, payload });\nexport const increaseGamePoint = (payload: Team) => ({ type: INCREASE_GAME_POINT, payload });\nexport const decreaseGamePoint = (payload: Team) => ({ type: DECREASE_GAME_POINT, payload });\nexport const increaseTieScore = (payload: Team) => ({ type: INCREASE_TIE_SCORE, payload });\nexport const decreaseTieScore = (payload: Team) => ({ type: DECREASE_TIE_SCORE, payload });\n\nexport type GlobalAction =\n    | ReturnType<typeof setMember>\n    | ReturnType<typeof toggleMatchPoint>\n    | ReturnType<typeof toggleDuce>\n    | ReturnType<typeof increaseGameScore>\n    | ReturnType<typeof decreaseGameScore>\n    | ReturnType<typeof increaseTieScore>\n    | ReturnType<typeof decreaseTieScore>\n    | ReturnType<typeof increaseGamePoint>\n    | ReturnType<typeof decreaseGamePoint>\n    | ReturnType<typeof toggleServeTurn>\n    | ReturnType<typeof toggleTiebreak>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, HashRouter } from 'react-router-dom';\nimport './index.css';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport App from './App';\nimport GlobalProvider from './context/GlobalContext';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter basename=\"/\">\n            <GlobalProvider>\n                <h1 style={{ fontSize: '20rem' }}>사과하세요</h1>\n            </GlobalProvider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}